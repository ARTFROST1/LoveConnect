import { useState, useEffect } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Copy, ExternalLink, CheckCircle, Info } from "lucide-react";
import { telegramService } from "@/lib/telegram";
import { useToast } from "@/hooks/use-toast";

export default function StartappTest() {
  const [inviteLink, setInviteLink] = useState("");
  const [copied, setCopied] = useState(false);
  const [startParam, setStartParam] = useState<string | null>(null);
  const { toast } = useToast();

  useEffect(() => {
    // Check current start parameter
    const currentStartParam = telegramService.startParam;
    setStartParam(currentStartParam);
    
    // Generate invite link for current user
    generateInviteLink();
  }, []);

  const generateInviteLink = async () => {
    const tgUser = telegramService.user;
    if (!tgUser) {
      console.log("No user data available for generating invite link");
      return;
    }

    try {
      const link = await telegramService.generateInviteLink(tgUser.id.toString());
      setInviteLink(link);
    } catch (error) {
      console.error("Failed to generate invite link:", error);
    }
  };

  const copyInviteLink = async () => {
    try {
      await navigator.clipboard.writeText(inviteLink);
      setCopied(true);
      telegramService.hapticFeedback('notification', 'success');
      toast({
        title: "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!",
        description: "–°—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞",
      });
      
      setTimeout(() => setCopied(false), 2000);
    } catch (error) {
      console.error('Failed to copy link:', error);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É",
        variant: "destructive"
      });
    }
  };

  const testInviteLink = () => {
    if (inviteLink) {
      // For Telegram WebApp links, we need to open them in a new window
      // In a real Telegram environment, this would trigger the bot
      window.open(inviteLink, '_blank');
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 dark:bg-gray-900 p-6">
      <div className="max-w-2xl mx-auto space-y-6">
        <div className="text-center">
          <h1 className="text-3xl font-bold text-gray-800 dark:text-gray-100 mb-2">
            –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã startapp
          </h1>
          <p className="text-gray-600 dark:text-gray-400">
            –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
          </p>
        </div>

        {/* Current Start Parameter */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Info className="w-5 h-5" />
              –¢–µ–∫—É—â–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä –∑–∞–ø—É—Å–∫–∞
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="bg-gray-100 dark:bg-gray-800 p-4 rounded-lg">
              <code className="text-sm">
                {startParam ? (
                  <span className="text-green-600 dark:text-green-400">
                    startParam: "{startParam}"
                  </span>
                ) : (
                  <span className="text-gray-500">
                    –ü–∞—Ä–∞–º–µ—Ç—Ä startapp –Ω–µ –Ω–∞–π–¥–µ–Ω (–æ–±—ã—á–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è)
                  </span>
                )}
              </code>
            </div>
            {startParam && startParam.startsWith('invite_') && (
              <div className="mt-3 p-3 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg">
                <p className="text-sm text-green-700 dark:text-green-300">
                  ‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {startParam.replace('invite_', '')}
                </p>
              </div>
            )}
          </CardContent>
        </Card>

        {/* Generated Invite Link */}
        <Card>
          <CardHeader>
            <CardTitle>–í–∞—à–∞ —Å—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ</CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="bg-gray-100 dark:bg-gray-800 p-4 rounded-lg">
              <p className="text-sm text-gray-600 dark:text-gray-300 break-all font-mono">
                {inviteLink || "–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Å—ã–ª–∫–∏..."}
              </p>
            </div>

            {inviteLink && (
              <div className="space-y-2">
                <div className="flex gap-2">
                  <Button 
                    onClick={copyInviteLink}
                    className="flex-1"
                    disabled={!inviteLink}
                  >
                    {copied ? (
                      <>
                        <CheckCircle className="w-4 h-4 mr-2" />
                        –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!
                      </>
                    ) : (
                      <>
                        <Copy className="w-4 h-4 mr-2" />
                        –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                      </>
                    )}
                  </Button>
                  
                  <Button 
                    onClick={testInviteLink}
                    variant="outline"
                    className="flex-1"
                  >
                    <ExternalLink className="w-4 h-4 mr-2" />
                    –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å
                  </Button>
                </div>

                <div className="text-xs text-gray-500 dark:text-gray-400 space-y-1">
                  <p>‚Ä¢ –°—Å—ã–ª–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ https://t.me/duolove_bot/app?startapp=invite_[ID]</p>
                  <p>‚Ä¢ –ó–∞–ø—É—Å–∫–∞–µ—Ç WebApp —á–µ—Ä–µ–∑ Telegram Bot</p>
                  <p>‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ</p>
                </div>
              </div>
            )}
          </CardContent>
        </Card>

        {/* URL Format Analysis */}
        <Card>
          <CardHeader>
            <CardTitle>–ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ä–º–∞—Ç–∞ —Å—Å—ã–ª–∫–∏</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div className="p-4 border-2 border-green-200 dark:border-green-800 rounded-lg bg-green-50 dark:bg-green-900/20">
                  <h4 className="font-semibold text-green-800 dark:text-green-200 mb-2">
                    ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
                  </h4>
                  <code className="text-xs text-green-700 dark:text-green-300 block bg-white dark:bg-gray-800 p-2 rounded break-all">
                    https://t.me/duolove_bot/app?startapp=invite_123456
                  </code>
                  <ul className="text-xs text-green-600 dark:text-green-400 mt-2 space-y-1">
                    <li>‚Ä¢ –ó–∞–ø—É—Å–∫–∞–µ—Ç WebApp —á–µ—Ä–µ–∑ Telegram</li>
                    <li>‚Ä¢ –ü–µ—Ä–µ–¥–∞–µ—Ç startapp –ø–∞—Ä–∞–º–µ—Ç—Ä</li>
                    <li>‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –≤–æ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–∞—Ö Telegram</li>
                  </ul>
                </div>

                <div className="p-4 border-2 border-red-200 dark:border-red-800 rounded-lg bg-red-50 dark:bg-red-900/20">
                  <h4 className="font-semibold text-red-800 dark:text-red-200 mb-2">
                    ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
                  </h4>
                  <code className="text-xs text-red-700 dark:text-red-300 block bg-white dark:bg-gray-800 p-2 rounded break-all">
                    https://[app].replit.dev?startapp=invite_123456
                  </code>
                  <ul className="text-xs text-red-600 dark:text-red-400 mt-2 space-y-1">
                    <li>‚Ä¢ –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ–º–µ–Ω</li>
                    <li>‚Ä¢ Telegram –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç –∫–∞–∫ WebApp</li>
                    <li>‚Ä¢ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã startapp —Ç–µ—Ä—è—é—Ç—Å—è</li>
                  </ul>
                </div>
              </div>

              <div className="bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4">
                <h4 className="font-semibold text-blue-800 dark:text-blue-200 mb-2">
                  üìã –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                </h4>
                <div className="text-sm text-blue-700 dark:text-blue-300 space-y-1">
                  <p><strong>Telegram WebApp API:</strong> –¢–æ–ª—å–∫–æ —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ t.me/[bot]/app –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–µ—Ä–µ–¥–∞—é—Ç startapp –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</p>
                  <p><strong>–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:</strong> initDataUnsafe.start_param –∏–ª–∏ URL query –ø–∞—Ä–∞–º–µ—Ç—Ä—ã</p>
                  <p><strong>–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å:</strong> –†–∞–±–æ—Ç–∞–µ—Ç –≤–æ –≤—Å–µ—Ö –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞—Ö Telegram</p>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Development Mode Info */}
        {telegramService.isDevelopment && (
          <Card className="bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800">
            <CardHeader>
              <CardTitle className="text-yellow-800 dark:text-yellow-200">
                üß™ –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="text-sm text-yellow-700 dark:text-yellow-300 space-y-2">
                <p>–í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.</p>
                <p>–í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –±—É–¥–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è Telegram WebApp —Å—Å—ã–ª–∫–∞.</p>
                <div className="bg-yellow-100 dark:bg-yellow-900/40 p-3 rounded border">
                  <p className="font-mono text-xs break-all">{inviteLink}</p>
                </div>
              </div>
            </CardContent>
          </Card>
        )}
      </div>
    </div>
  );
}