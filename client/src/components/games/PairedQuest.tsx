import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { telegramService } from "@/lib/telegram";
import { QuestStep } from "@/types/models";

interface PairedQuestProps {
  sessionId: number;
  onComplete: (userScore: number, partnerScore: number) => void;
}

const questSteps: Record<string, QuestStep> = {
  start: {
    id: 'start',
    text: '–í—ã –æ–∫–∞–∑–∞–ª–∏—Å—å –Ω–∞ –Ω–µ–æ–±–∏—Ç–∞–µ–º–æ–º –æ—Å—Ç—Ä–æ–≤–µ –≤–º–µ—Å—Ç–µ —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º. –ß—Ç–æ –±—É–¥–µ—Ç–µ –¥–µ–ª–∞—Ç—å –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å?',
    choices: [
      { text: '–ò—Å–∫–∞—Ç—å –ø—Ä–µ—Å–Ω—É—é –≤–æ–¥—É', nextStepId: 'water' },
      { text: '–°—Ç—Ä–æ–∏—Ç—å —É–∫—Ä—ã—Ç–∏–µ', nextStepId: 'shelter' },
      { text: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –æ—Å—Ç—Ä–æ–≤', nextStepId: 'explore' }
    ]
  },
  water: {
    id: 'water',
    text: '–í—ã –Ω–∞—à–ª–∏ –∏—Å—Ç–æ—á–Ω–∏–∫ –ø—Ä–µ—Å–Ω–æ–π –≤–æ–¥—ã! –ü–∞—Ä—Ç–Ω—ë—Ä –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç —Å–Ω–∞—á–∞–ª–∞ –æ—á–∏—Å—Ç–∏—Ç—å –≤–æ–¥—É. –í–∞—à–∏ –¥–µ–π—Å—Ç–≤–∏—è?',
    choices: [
      { text: '–°–æ–≥–ª–∞—Å–∏—Ç—å—Å—è –∏ –æ—á–∏—Å—Ç–∏—Ç—å –≤–æ–¥—É', nextStepId: 'cooperation' },
      { text: '–ü–∏—Ç—å —Å—Ä–∞–∑—É, –æ—á–µ–Ω—å —Ö–æ—á–µ—Ç—Å—è', nextStepId: 'impatience' },
      { text: '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤–æ–¥—É –Ω–∞ –≤–∫—É—Å –∏ –∑–∞–ø–∞—Ö', nextStepId: 'caution' }
    ]
  },
  shelter: {
    id: 'shelter',
    text: '–í—ã –Ω–∞—á–∞–ª–∏ —Å—Ç—Ä–æ–∏—Ç—å —É–∫—Ä—ã—Ç–∏–µ. –ü–∞—Ä—Ç–Ω—ë—Ä —Å–æ–±–∏—Ä–∞–µ—Ç –≤–µ—Ç–∫–∏, –∞ —á—Ç–æ –±—É–¥–µ—Ç–µ –¥–µ–ª–∞—Ç—å –≤—ã?',
    choices: [
      { text: '–ò—Å–∫–∞—Ç—å –ª–∏—Å—Ç—å—è –¥–ª—è –∫—Ä—ã—à–∏', nextStepId: 'teamwork' },
      { text: '–ü–æ–º–æ–≥–∞—Ç—å —Å –≤–µ—Ç–∫–∞–º–∏', nextStepId: 'cooperation' },
      { text: '–†–∞–∑–∂–∏–≥–∞—Ç—å –∫–æ—Å—Ç—ë—Ä', nextStepId: 'initiative' }
    ]
  },
  explore: {
    id: 'explore',
    text: '–ò—Å—Å–ª–µ–¥—É—è –æ—Å—Ç—Ä–æ–≤, –≤—ã –Ω–∞—à–ª–∏ –ø–µ—â–µ—Ä—É. –ü–∞—Ä—Ç–Ω—ë—Ä –±–æ–∏—Ç—Å—è —Ç—É–¥–∞ –∏–¥—Ç–∏. –ß—Ç–æ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç–µ?',
    choices: [
      { text: '–ò–¥—Ç–∏ –≤–º–µ—Å—Ç–µ, –≤–∑—è–≤—à–∏—Å—å –∑–∞ —Ä—É–∫–∏', nextStepId: 'support' },
      { text: '–ü–æ–π—Ç–∏ –ø–µ—Ä–≤—ã–º, –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä', nextStepId: 'leadership' },
      { text: '–ù–∞–π—Ç–∏ –¥—Ä—É–≥–æ–µ –º–µ—Å—Ç–æ', nextStepId: 'compromise' }
    ]
  },
  cooperation: {
    id: 'cooperation',
    text: '–ë–ª–∞–≥–æ–¥–∞—Ä—è —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É –≤—ã –æ—Ç–ª–∏—á–Ω–æ —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å! –ü–∞—Ä—Ç–Ω—ë—Ä –æ—á–µ–Ω—å —Ä–∞–¥. –ß—Ç–æ –¥–∞–ª—å—à–µ?',
    choices: [
      { text: '–û—Ç–ø—Ä–∞–∑–¥–Ω–æ–≤–∞—Ç—å —É—Å–ø–µ—Ö –≤–º–µ—Å—Ç–µ', nextStepId: 'celebration' },
      { text: '–ü–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è', nextStepId: 'planning' },
      { text: '–û—Ç–¥–æ—Ö–Ω—É—Ç—å –∏ –Ω–∞—Å–ª–∞–¥–∏—Ç—å—Å—è –º–æ–º–µ–Ω—Ç–æ–º', nextStepId: 'relaxation' }
    ]
  },
  celebration: {
    id: 'celebration',
    text: '–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –æ—Ç–ª–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ –≤ –∫–æ–º–∞–Ω–¥–µ –∏ —É–º–µ–µ—Ç–µ —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è —É—Å–ø–µ—Ö–∞–º –≤–º–µ—Å—Ç–µ. –í–∞—à–∞ —Å–≤—è–∑—å —Å—Ç–∞–ª–∞ –µ—â—ë –∫—Ä–µ–ø—á–µ!',
    choices: []
  },
  planning: {
    id: 'planning',
    text: '–û—Ç–ª–∏—á–Ω–æ! –í—ã –ø—Ä–∞–∫—Ç–∏—á–Ω–∞—è –ø–∞—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è –≤—Å–µ–≥–¥–∞ –¥—É–º–∞–µ—Ç –Ω–∞–ø–µ—Ä—ë–¥. –ë–ª–∞–≥–æ–¥–∞—Ä—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é –≤—ã —Ç–æ—á–Ω–æ –≤—ã–∂–∏–≤–µ—Ç–µ –Ω–∞ –æ—Å—Ç—Ä–æ–≤–µ!',
    choices: []
  },
  // Add other endings...
  teamwork: {
    id: 'teamwork',
    text: '–ü—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –∫–æ–º–∞–Ω–¥–Ω–∞—è —Ä–∞–±–æ—Ç–∞! –í—ã –¥–æ–ø–æ–ª–Ω—è–µ—Ç–µ –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –∏ –≤–º–µ—Å—Ç–µ –º–æ–∂–µ—Ç–µ —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å –ª—é–±—ã–º–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏.',
    choices: []
  },
  support: {
    id: 'support',
    text: '–í–∞—à–∞ –≤–∑–∞–∏–º–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –≤–ø–µ—á–∞—Ç–ª—è–µ—Ç! –í–º–µ—Å—Ç–µ –≤—ã –Ω–µ –±–æ–∏—Ç–µ—Å—å –Ω–∏–∫–∞–∫–∏—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π.',
    choices: []
  },
  leadership: {
    id: 'leadership',
    text: '–û—Ç–ª–∏—á–Ω—ã–µ –ª–∏–¥–µ—Ä—Å–∫–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞! –í—ã —É–º–µ–µ—Ç–µ –≤–µ—Å—Ç–∏ –∑–∞ —Å–æ–±–æ–π –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –ø–∞—Ä—Ç–Ω—ë—Ä–∞ –≤ —Ç—Ä—É–¥–Ω—É—é –º–∏–Ω—É—Ç—É.',
    choices: []
  },
  compromise: {
    id: 'compromise',
    text: '–ú—É–¥—Ä—ã–π –∫–æ–º–ø—Ä–æ–º–∏—Å—Å! –í—ã —É–≤–∞–∂–∞–µ—Ç–µ —á—É–≤—Å—Ç–≤–∞ –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –∏ –Ω–∞—Ö–æ–¥–∏—Ç–µ —Ä–µ—à–µ–Ω–∏—è, —É—Å—Ç—Ä–∞–∏–≤–∞—é—â–∏–µ –æ–±–æ–∏—Ö.',
    choices: []
  },
  relaxation: {
    id: 'relaxation',
    text: '–í—ã —É–º–µ–µ—Ç–µ –Ω–∞—Å–ª–∞–∂–¥–∞—Ç—å—Å—è –º–æ–º–µ–Ω—Ç–æ–º –∏ —Ü–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è, –ø—Ä–æ–≤–µ–¥—ë–Ω–Ω–æ–µ –≤–º–µ—Å—Ç–µ. –≠—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ!',
    choices: []
  },
  impatience: {
    id: 'impatience',
    text: '–ò–Ω–æ–≥–¥–∞ –Ω–µ—Ç–µ—Ä–ø–µ–Ω–∏–µ –º–æ–∂–µ—Ç –ø–æ–¥–≤–µ—Å—Ç–∏, –Ω–æ –ø–∞—Ä—Ç–Ω—ë—Ä –≥–æ—Ç–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –≤–∞—Å –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏!',
    choices: []
  },
  caution: {
    id: 'caution',
    text: '–û—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å ‚Äì –æ—Ç–ª–∏—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ! –í—ã –∑–∞–±–æ—Ç–∏—Ç–µ—Å—å –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –≤–∑–≤–µ—à–µ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è.',
    choices: []
  },
  initiative: {
    id: 'initiative',
    text: '–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞! –í—ã —É–º–µ–µ—Ç–µ –±—Ä–∞—Ç—å –Ω–∞ —Å–µ–±—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å.',
    choices: []
  }
};

export default function PairedQuest({ sessionId, onComplete }: PairedQuestProps) {
  const [currentStepId, setCurrentStepId] = useState('start');
  const [questPath, setQuestPath] = useState<string[]>(['start']);
  const [isComplete, setIsComplete] = useState(false);

  const currentStep = questSteps[currentStepId];
  const isEnding = currentStep.choices.length === 0;

  const handleChoice = (nextStepId: string) => {
    telegramService.hapticFeedback('selection');
    
    const newPath = [...questPath, nextStepId];
    setQuestPath(newPath);
    setCurrentStepId(nextStepId);

    const nextStep = questSteps[nextStepId];
    if (nextStep.choices.length === 0) {
      // Quest ended
      setTimeout(() => {
        completeQuest(newPath);
      }, 3000);
    }
  };

  const completeQuest = (path: string[]) => {
    // Calculate scores based on quest path
    const userScore = path.length * 2; // Simple scoring
    const partnerScore = path.length * 2; // Both get same score for cooperation
    
    setIsComplete(true);
    onComplete(userScore, partnerScore);
  };

  if (isComplete) {
    return (
      <div className="p-4">
        <Card>
          <CardContent className="p-6 text-center">
            <h2 className="text-2xl font-bold mb-4 text-gray-800 dark:text-gray-100">
              –ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω!
            </h2>
            
            <div className="mb-6">
              <p className="text-lg text-gray-600 dark:text-gray-400 mb-4">
                –û—Ç–ª–∏—á–Ω–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ! –í—ã –ø—Ä–æ—à–ª–∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –∏ —É–∑–Ω–∞–ª–∏ –¥—Ä—É–≥ –æ –¥—Ä—É–≥–µ –º–Ω–æ–≥–æ –Ω–æ–≤–æ–≥–æ.
              </p>
              <p className="text-accent font-semibold">
                üèÜ –ü–æ–ª—É—á–µ–Ω–æ {questPath.length * 2} —Å–µ—Ä–¥–µ—á–µ–∫!
              </p>
            </div>
            
            <div className="space-y-3">
              <Button 
                className="w-full bg-gradient-to-r from-primary to-secondary text-white"
                onClick={() => window.location.href = '/games'}
              >
                –ò–≥—Ä–∞—Ç—å –µ—â—ë
              </Button>
              <Button 
                variant="outline" 
                className="w-full"
                onClick={() => window.location.href = '/'}
              >
                –ù–∞ –≥–ª–∞–≤–Ω—É—é
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>
    );
  }

  return (
    <div className="p-4">
      {/* Quest Progress */}
      <Card className="mb-4">
        <CardContent className="p-4">
          <div className="flex items-center justify-between">
            <span className="text-sm text-gray-600 dark:text-gray-400">
              –®–∞–≥ {questPath.length}
            </span>
            <span className="text-sm text-gray-600 dark:text-gray-400">
              –ü–∞—Ä–Ω—ã–π –∫–≤–µ—Å—Ç
            </span>
          </div>
        </CardContent>
      </Card>

      {/* Current Step */}
      <Card className="mb-6">
        <CardContent className="p-6">
          <h3 className="text-lg font-semibold text-gray-800 dark:text-gray-100 mb-6 leading-relaxed">
            {currentStep.text}
          </h3>
          
          {isEnding ? (
            <div className="text-center">
              <div className="w-16 h-16 bg-gradient-to-br from-accent/20 to-primary/20 rounded-full flex items-center justify-center mx-auto mb-4">
                <span className="text-2xl">üéâ</span>
              </div>
              <p className="text-gray-600 dark:text-gray-400">
                –û–∂–∏–¥–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...
              </p>
            </div>
          ) : (
            <div className="space-y-3">
              {currentStep.choices.map((choice, index) => (
                <Button
                  key={index}
                  variant="outline"
                  className="w-full p-4 text-left justify-start hover:bg-accent/10 hover:border-accent transition-colors duration-200 h-auto"
                  onClick={() => handleChoice(choice.nextStepId)}
                >
                  <span className="text-wrap">{choice.text}</span>
                </Button>
              ))}
            </div>
          )}
        </CardContent>
      </Card>

      {/* Path Indicator */}
      <Card className="bg-gradient-to-r from-primary/10 to-secondary/10">
        <CardContent className="p-4">
          <div className="flex items-center justify-center space-x-2">
            {questPath.map((_, index) => (
              <div
                key={index}
                className="w-3 h-3 rounded-full bg-gradient-to-r from-primary to-secondary"
              />
            ))}
            {!isEnding && (
              <div className="w-3 h-3 rounded-full border-2 border-gray-300 dark:border-gray-600" />
            )}
          </div>
          <p className="text-center text-sm text-gray-600 dark:text-gray-400 mt-2">
            –ü—Ä–æ–≥—Ä–µ—Å—Å –∫–≤–µ—Å—Ç–∞
          </p>
        </CardContent>
      </Card>
    </div>
  );
}
